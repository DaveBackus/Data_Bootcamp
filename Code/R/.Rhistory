rm(list=ls())
load("UN.RData")
asfr_sub <- asfr[asfr$Country.code %in% list.uncodes& asfr$Period == "2005-2010",]
asfr_sub <- asfr_sub[order(asfr_sub$Country.code),]
# convert to ts
rm("convert_to_ts")
convert_to_ts <- function(dataset) {
ts_data <- ts(
t(dataset[,7:ncol(dataset)]),
start=17.5,
frequency=0.2
)
# label with country names
colnames(ts_data) <- list.countries
return(ts_data)
}
asfr_ts <- convert_to_ts(asfr_sub)
asfr_sub <- asfr[asfr$Country.code %in% list.uncodes& asfr$Period == "2005-2010",]
# ** start here after setting directory
noquote("Clear workspace and load data...")
rm(list=ls())
load("UN.RData")
asfr_sub <- asfr[asfr$Country.code %in% list.uncodes& asfr$Period == "2005-2010",]
# country codes
# CHN = 156, DEU = 276, JPN = 392, USA = 840, Western Europe = 926
# http://cran.r-project.org/web/packages/countrycode/countrycode.pdf
# select countries
#list.countries <- c("CHN", "DEU", "JPN", "USA")
list.uncodes   <- c("156", "276", "392", "840")
library("countrycode")
list.countries <- countrycode(list.uncodes, "un", "iso3c", warn=TRUE)
asfr_sub <- asfr[asfr$Country.code %in% list.uncodes& asfr$Period == "2005-2010",]
asfr_sub <- asfr_sub[order(asfr_sub$Country.code),]
rstudio::viewData(asfr_sub)
# convert to ts
rm("convert_to_ts")
convert_to_ts <- function(dataset) {
ts_data <- ts(
t(dataset[,7:ncol(dataset)]),
start=17.5,
frequency=0.2
)
# label with country names
colnames(ts_data) <- list.countries
return(ts_data)
}
asfr_ts <- convert_to_ts(asfr_sub)
asfr_total <- sum(asfr_ts)
asfr_total <- sum(data.frame(asfr_ts))
asfr_df <- data.frame(asfr_ts)
rstudio::viewData(asfr_df)
asfr_total <- sum(asfr_df)
asfr_total <- colSums(asfr_df)
fix(asfr_total)
print(asfr_total)
print("Total fertility rates by country", asfr_total)
print("Total fertility rates by country")
print(asfr_total))
print("Total fertility rates by country")
print(asfr_total)
asfr_total <- colSums(asfr_ts)
fix(asfr_total)
asfr_sub <- asfr[asfr$Country.code %in% list.uncodes& asfr$Period == "2005-2010",]
asfr_sub <- asfr_sub[order(asfr_sub$Country.code),]
# convert to ts
rm("convert_to_ts")
convert_to_ts <- function(dataset) {
ts_data <- ts(
t(dataset[,7:ncol(dataset)]),
start=17.5,
frequency=0.2
)
# label with country names
colnames(ts_data) <- list.countries
return(ts_data)
}
asfr_ts <- convert_to_ts(asfr_sub)
asfr_total <- colSums(asfr_ts)
print("Total fertility rates by country")
print(asfr_total)
noquote("Total fertility rates by country")
print(asfr_total)
# clear memory, set directory for output
rm(list=ls())
dir = "C:/Users/dbackus/Documents/Papers/BCH/data/ISOM_2013"
setwd(dir)
rm(list=ls())
dir = "C:/Users/dbackus/Documents/Papers/BCH/data/ISOM_2013"
setwd(dir)
load("PWT.RData")
# select countries
list.countries <- c("CHN", "DEU", "JPN", "USA")
pwt$isocode <- gsub("GER", "DEU", pwt$isocode)
pwt_sub <- pwt[pwt$isocode %in% list.countries,]
ky <- pwt_sub$KY
ky <- matrix(ky, ncol=4)
colnames(ky) <- list.countries
ky_ts = ts(ky, start=1950, frequency=1)
ky_ts <- window(ky_ts, start=1980)
# plot all countries together
plot.name <- "figs/BCH_ky.pdf"
pdf(file=plot.name, width=8, height=6)
par(fin=c(8,6), mgp=c(2.25,1,0), mar=c(4,3.6,3,0.1), cex=1.25)
colseq = c("red", "black", "green3", "blue")
plot(ky_ts,
plot.type='single',
lty=1,
lwd=3,
col=colseq,
xlab="", ylab="Capital-Output Ratio", main="",
ylim=c(1,4.5)
)
mtext("Source: Penn World Table and authors calculations", side=1, line=2.5, cex=1.0, adj=0)
legend("topleft", legend=list.countries, cex=1.0, lwd=3, col=colseq,
y.intersp=1, x.intersp=0.5, ncol=2, bty="n"
)
dev.off()
plot.name <- "figs/BCH_ky.pdf"
pdf(file=plot.name, width=8, height=6)
par(fin=c(8,6), mgp=c(2.25,1,0), mar=c(4,3.6,3,0.1), cex=1.25)
colseq = c("red", "black", "green3", "blue")
plot(ky_ts,
plot.type='single',
lty=1,
lwd=3,
col=colseq,
xlab="", ylab="Capital-Output Ratio", main="",
ylim=c(0,4.5)
)
mtext("Source: Penn World Table and authors calculations", side=1, line=2.5, cex=1.0, adj=0)
legend("topleft", legend=list.countries, cex=1.0, lwd=3, col=colseq,
y.intersp=1, x.intersp=0.5, ncol=2, bty="n"
)
dev.off()
par()
# plot all countries together
plot.name <- "figs/BCH_ky.pdf"
pdf(file=plot.name, width=8, height=6)
par(fin=c(8,6), mgp=c(2.25,1,0), mar=c(4,3.6,2,0.1), cex=1.25)
colseq = c("red", "black", "green3", "blue")
plot(ky_ts,
plot.type='single',
lty=1,
lwd=3,
col=colseq,
xlab="", ylab="Capital-Output Ratio", main="",
ylim=c(0,4.5)
)
mtext("Source: Penn World Table and authors calculations", side=1, line=2.5, cex=1.0, adj=0)
legend("topleft", legend=list.countries, cex=1.0, lwd=3, col=colseq,
y.intersp=1, x.intersp=0.5, ncol=2, bty="n"
)
dev.off()
# 2. Data selection and plot
# ** start here after setting directory
noquote("Clear workspace and load data...")
rm(list=ls())
load("UN.RData")
# country codes
# CHN = 156, DEU = 276, JPN = 392, USA = 840, Western Europe = 926
# http://cran.r-project.org/web/packages/countrycode/countrycode.pdf
# select countries
#list.countries <- c("CHN", "DEU", "JPN", "USA")
list.uncodes   <- c("156", "276", "392", "840")
library("countrycode")
list.countries <- countrycode(list.uncodes, "un", "iso3c", warn=TRUE)
# set graphics parameters
#par.old  <- par()
#par.mine <- par(fin=c(8,6), mgp=c(2.25,1,0), mar=c(4,4.2,3,0.2), cex=1)
# ------------------------------------------------------------------------------
# (a) Life expectancy
# order the countries by code
le_sub <- le[le$Country.code %in% list.uncodes,]
# convert to ts
convert_to_ts <- function(dataset) {
ts_data <- ts(
t(dataset[,4:ncol(dataset)]),
# note column one is the row names
start=1952.5,
frequency=0.2
)
# label with country names
colnames(ts_data) <- list.countries
return(ts_data)
}
le_ts <- convert_to_ts(le_sub)
# plot all countries together
plot.name <- "figs/BCH_le.pdf"
pdf(file=plot.name, width=8, height=6)
par(fin=c(8,6), mgp=c(2.25,1,0), mar=c(4,3.6,2,0.1), cex=1.25)
colseq = c("red", "black", "green3", "blue")
plot(le_ts,
plot.type='single',
lty=1, #c(1,1,1,5),
lwd=3,
col=colseq,
xlab="", ylab="Life Expectancy at Birth", main="",
xlim=c(1950,2100),
)
abline(v=2010)
text(1990, 47, "Estimates")
text(2030, 47, "Projections")
mtext("Source: UN, World Population Prospects, 2010 revision", side=1, line=2.5, cex=1.0, adj=0)
legend("topleft", legend=list.countries, cex=1.0, lwd=3, col=colseq,
y.intersp=1, x.intersp=0.5, ncol=2, bty="n"
)
dev.off()
#dev.print(device=pdf, file=plot.name, width=8, height=6)
# ------------------------------------------------------------------------------
(b) Old-age dependency
oad_sub <- oad[oad$Country.code %in% list.uncodes,]
# convert to ts
rm("convert_to_ts")
convert_to_ts <- function(dataset) {
ts_data <- ts(
t(dataset[,4:ncol(dataset)]),
start=1950,
frequency=0.2
)
# label with country names
colnames(ts_data) <- list.countries
return(ts_data)
}
oad_ts <- convert_to_ts(oad_sub)
# plot all countries together
plot.name <- "figs/BCH_oad.pdf"
pdf(file=plot.name, width=8, height=6)
par(fin=c(8,6), mgp=c(2.25,1,0), mar=c(4,3.6,2,0.1), cex=1.25)
colseq = c("red", "black", "green3", "blue")
plot(oad_ts,
plot.type='single',
lty=1,
lwd=3,
col=colseq,
xlab="", ylab="Old-Age Dependency (65+ over 20-64)", main="",
xlim=c(1950,2100),
)
abline(v=2010)
#text(1995, 47, "Estimates")
#text(2030, 47, "Projections")
mtext("Source: UN, World Population Prospects, 2010 revision", side=1, line=2.5, cex=1.0, adj=0)
legend("topleft", legend=list.countries, cex=1.0, lwd=3, col=colseq,
y.intersp=1, x.intersp=0.5, ncol=2, bty="n"
)
dev.off()
#dev.print(device=pdf, file=plot.name, width=8, height=6)
# ------------------------------------------------------------------------------
(c) age-specific fertility
asfr_sub <- asfr[asfr$Country.code %in% list.uncodes& asfr$Period == "2005-2010",]
asfr_sub <- asfr_sub[order(asfr_sub$Country.code),]
# convert to ts
rm("convert_to_ts")
convert_to_ts <- function(dataset) {
ts_data <- ts(
t(dataset[,7:ncol(dataset)]),
start=17.5,
frequency=0.2
)
# label with country names
colnames(ts_data) <- list.countries
return(ts_data)
}
asfr_ts <- convert_to_ts(asfr_sub)
# compute totals
asfr_total <- colSums(asfr_ts)
noquote("Total fertility by country")
print(asfr_total)
# plot all countries together
plot.name <- "figs/BCH_asfr.pdf"
pdf(file=plot.name, width=8, height=6)
par(fin=c(8,6), mgp=c(2.25,1,0), mar=c(4,3.6,2,0.1), cex=1.25)
colseq = c("red", "black", "green3", "blue")
plot(asfr_ts,
plot.type='single',
lty=1,
lwd=3,
col=colseq,
xlab="", ylab="Births per Thousand Women", main="",
)
mtext("Source: UN, World Population Prospects, 2010 revision", side=1, line=2.5, cex=1.0, adj=0)
legend("topright", legend=list.countries, cex=1.0, lwd=3, col=colseq,
y.intersp=1, x.intersp=0.5, ncol=2, bty="n"
)
dev.off()
#dev.print(device=pdf, file=plot.name, width=8, height=6)
# ------------------------------------------------------------------------------
(d) age distribution
frameClasses(pop)
list.years <- c(1980, 2010, 2040)
pop_sub <- pop[pop$Country.code == 156 & pop$Reference %in% list.years,]
# plot
TAB <- cohorts.country
mp <- barplot(as.matrix(TAB),beside=TRUE,col=rainbow(nyears),axisnames=FALSE, args.legend=list(x="topright"))
legend("topright", legend=c("1950","1980","2010","2040"), fill=rainbow(nyears), bty="n")
# country heading
mtext(ccode[j,2], side=3, adj=0, line=0.5, cex=1.25)
# age labels
colMeansmp <- colMeans(mp)
for(i in 1 : 11){
mtext(1, at=colMeansmp[(i-1)*2+1], text=x[(i-1)*2+1], line=0.20, cex=0.8)
}
for(i in 1 : 10){
mtext(1, at=colMeansmp[i*2], text=x[i*2], line=1.00, cex=0.8)
}
mtext("Source:  United Nations, Population Estimates and Projections", side=1, line=2.5, cex=.6, adj=0)
rm(list=ls())
load("LMF.Rdata")
# ------------------------------------------------------------------------------
# 2. Extract subset
# ?? could probably streamline this
# extract a subset of columns (variables)
lmf.subset <- data.frame(Country = lmf.data$Country,
IFS     = lmf.data$IFS.code,
Year    = lmf.data$Year,
NFA     = as.numeric(gsub(",","",lmf.data$NFA)),
GDP     = as.numeric(gsub(",","",lmf.data$GDP)),
NFAGDP  = as.numeric(gsub(",","",lmf.data$NFA))
)
lmf.subset$NFAGDP <- lmf.subset$NFA/lmf.subset$GDP
# extract a subsect of countries (rows)
countries <- c("China,P.R.: Mainland", "Germany", "Japan", "United States")
#c("Australia","Canada","China,P.R.: Mainland", #"Germany","France","Italy","Japan","Norway","United Kingdom","United States")
lmf.oecd<- NULL
for(i in 1:length(countries)){
lmf.oecd <- cbind(lmf.oecd,lmf.subset[lmf.subset$Country == countries[i],]$NFAGDP)
}
countries <- c("CHN", "DEU", "JPN", "USA")
dimnames(lmf.oecd)[[2]] <- countries
lmf.oecd <- ts(lmf.oecd,start=1970,frequency=1)
lmf.oecd <- window(lmf.oecd, start=1980)
plot.name <- "figs/BCH_nfa.pdf"
pdf(file=plot.name, width=8, height=6)
colseq = c("red", "black", "green3", "blue")
par(fin=c(8,6), mgp=c(2.25,1,0), mar=c(4,3.6,2,0.1), cex=1.25)
plot(lmf.oecd,
plot.type='single',
lty=1,
lwd=3,
col=colseq,
xlab="", ylab="Net Foreign Assets (Ratio to GDP)", main="",
)
abline(h=0, lty=1)
legend("topleft", legend=countries, cex=1, lwd=3, col=colseq,
y.intersp=1, x.intersp=0.5, ncol=2, bty="n"
)
mtext("Source:  Lane and Milesi-Ferretti", side=1, line=2.5, cex=1, adj=0)
dev.off()
# clear workspace
rm(list=ls())
# set working directory for output
dir = "C:/Users/dbackus/Documents/Papers/BCH/data/ISOM_2013"
setwd(dir)
backup <- "backups"
# 2. Data selection and plot
# ** start here
noquote("Clear workspace and load data...")
rm(list=ls())
load("WEOApr13.RData")
#setwd(dir)
# select countries and variables
list.countries <- c("CHN", "DEU", "JPN", "USA")
list.variables <- c("BCA_NGDPD")
weo_sub <- weo[weo$ISO %in% list.countries & weo$WEO.Subject.Code %in% list.variables,]
# convert to ts
convert_to_ts <- function(dataset) {
ts_data <- ts(
t(dataset[,11:ncol(dataset)-1]),  # transpose: ts expects data in columns
# note clumn one is the row names
start=1980,
frequency=1
)
# label with country names
colnames(ts_data) <- as.character(dataset$ISO)
return(ts_data)
}
weo_ts <- convert_to_ts(weo_sub)
weo_ts <- window(weo_ts, start=1980, end=2013)
# plot all countries together
plot.name <- "figs/BCH_ca.pdf"
pdf(file=plot.name, width=8, height=6)
colseq = c("red", "black", "green3", "blue")
par(fin=c(8,6), mgp=c(2.25,1,0), mar=c(4,3.6,2,0.1), cex=1.25)
plot(weo_ts,
plot.type='single',
#     new=TRUE,
lty=1,
lwd=3,
col=colseq,
xlab="", ylab="Current Account (Percent of GDP)", main="",
)
abline(a=0, b=0)
mtext("Source: IMF, World Economic Outlook, April 2013", side=1, line=2.5, cex=1.0, adj=0)
legend("topleft", legend=list.countries, cex=1, lwd=3, col=colseq,
y.intersp=1, x.intersp=0.5, ncol=2, bty="n"
)
dev.off()
# ------------------------------------------------------------------------------
# 2. Data selection and plot
# ** start here after setting directory
noquote("Clear workspace and load data...")
rm(list=ls())
load("WHO.RData")
# for later use
dates = c("1990", "2000", "2011")
# convert age to factor, set levels so that we can sort later
# https://stat.ethz.ch/pipermail/r-help/2011-October/292738.html
ages = c("<1", "1-4", "5-9", "10-14", "15-19", "20-24", "25-29", "30-34", "35-39",
"40-44", "45-49", "50-54", "55-59", "60-64", "65-69", "70-74", "75-79",
"80-84", "85-89", "90-94", "95-99", "100+")
gho$Age.Group <- factor(gho$Age.Group, levels=ages)
# sort
# http://stackoverflow.com/questions/1296646/how-to-sort-a-dataframe-by-columns-in-r
gho <- gho[with(gho, order(Year, Sex, Indicator, Country, Age.Group)),]
# all countries for 2011
sub <- subset(gho, Sex=="Both sexes" & Year=="2011", select=c(Indicator, Year, Country, Age.Group, Numeric))
all.countries <- data.frame(matrix(sub$Numeric, ncol=4))
rownames(all.countries) <- ages
colnames(all.countries) <- countries
# US data for three dates
sub <- subset(gho, Sex=="Both sexes" & Country=="United States of America", select=c(Indicator, Year, Country, Age.Group, Numeric))
#sub <- subset(gho, Sex=="Both sexes" & Country=="China", select=c(Indicator, Year, Country, Age.Group, Numeric))
all.dates <- data.frame(matrix(sub$Numeric, ncol=3))
rownames(all.dates) <- ages
colnames(all.dates) <- dates
# plot all countries together
plot.name <- "figs/BCH_asmr_all.pdf"
pdf(file=plot.name, width=8, height=6)
par(fin=c(8,6), mgp=c(2.25,1,0), mar=c(4,3.6,2,0.1), cex=1.25)
colseq = c("red", "black", "green3", "blue")
matplot(log(all.countries),
bty="o",
type="l",
lty=c(1),
lwd=c(3),
col=colseq,
xlabels=ages,
xlab="", ylab="Log of Mortality by Age", main="",
xaxt="n",
)
axis(1, at=c(1:length(ages)), labels=ages, tick=TRUE, hadj=0.5)
mtext("Source: WHO, Global Health Observatory", side=1, line=2.5, cex=1.0, adj=0)
legend("topleft", legend=countries, cex=1.0, lwd=3, col=colseq,
y.intersp=1, x.intersp=0.5, ncol=2, bty="n"
)
dev.off()
# plot all US data for three dates
plot.name <- "figs/BCH_asmr_USA.pdf"
pdf(file=plot.name, width=8, height=6)
par(fin=c(8,6), mgp=c(2.25,1,0), mar=c(4,3.6,2,0.1), cex=1.25)
colseq = c("red", "magenta", "blue")
matplot(log(all.dates),
type="l",
lty=c(1),
lwd=c(3),
col=colseq,
xlab="", ylab="Log of Mortality by Age", main="",
xaxt="n",
)
axis(1, at=c(1:length(ages)), labels=ages, tick=TRUE, hadj=0.5)
mtext("Source: WHO, Global Health Observatory", side=1, line=2.5, cex=1.0, adj=0)
legend("topleft", legend=dates, cex=1.0, lwd=3, col=colseq,
y.intersp=1, x.intersp=0.5, ncol=1, bty="n"
)
dev.off()
# clear workspace
rm(list=ls())
# set working directory for output
dir = "C:/Users/dbackus/Documents/Papers/BCH/data/ISOM_2013"
setwd(dir)
# load packages
library("gdata")
# cool function from Espen to check column classes (watch for dreaded factors)
frameClasses <- function(x) {unlist(lapply(unclass(x),class))}
# ------------------------------------------------------------------------------
# 1. Read data
file <- "OECD_retirement_age_timeseries_May_13.xlsx"
data <- read.xls(file, sheet="BCH", header=TRUE)
# ------------------------------------------------------------------------------
# 2. Data manipulation and plot
# convert to ts
convert_to_ts <- function(dataset) {
ts_data <- ts(
t(dataset[,2:ncol(dataset)]),
# note column one is the row names
start=1970,
frequency=1
)
# label with country names
colnames(ts_data) <- as.character(data$Country)
return(ts_data)
}
data_ts <- convert_to_ts(data)
data_ts <- window(data_ts, start=1980, end=2011)
# plot all countries together
plot.name <- "figs/BCH_retirement.pdf"
pdf(file=plot.name, width=8, height=6)
par(fin=c(8,6), mgp=c(2.25,1,0), mar=c(4,3.6,2,0.1), cex=1.25)
colseq = c("red", "black", "green3", "blue")
plot(data_ts,
plot.type='single',
lty=1,
lwd=3,
col=colseq,
xlab="", ylab="Effective Retirement Age", main="",
)
mtext("Source: OECD, Average Effective Age of Retirement", side=1, line=2.5, cex=1, adj=0)
legend("bottomleft", legend=colnames(data_ts), cex=1, lwd=3, col=colseq,
y.intersp=1, x.intersp=0.5, ncol=2, bty="n"
)
dev.off()
quit
q()
